<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAATESURBVHhe7Zp5yGZTHMdfS8kohGkIyS4zlpQsKUvkD5SIMJipsf2hkEikyFJKhGx/2JdkS8oM
        IX8geyhEypIsWbIkO6/v5/Z+67zPnLuc+8y58z6cT33qub97z7nnnOc+Z7vPVKFQKBQKhb7Mk2fIx+VH
        8ocZX5c3yYNlMtPT04M4LqfILyU5NfmU3FF2JlbYHI7DzTKs5KvyanmmPFveJb+QPv+b7Pw0xAqbw75c
        J12xd+QhMsZ68iLpa3FX2UqssDnsw6HSlXlWrinbOFA6zedyDdlIrLA57MOnkpQ83q0VCThGuhHOItBE
        rLA5TOUg6UocRSCR5yVpP6mOGogVNoepXC9J9VV1lM7R0g24M4E6YoXNYSrPSFI9WB2ls4X8R5LHYgJ1
        xAqbw1TekKS6oTpKZ135kyQPhstaYoXNYSovSlLdVh2ls5H8XZIHk6haYoXNYSr3SlK9XR2ls48kPe5P
        oI5YYXOYCt+aK7A9gURYG5D2F8nPoZZYYXOYyvrSndgKAglsKv+SpL2dwJhsIhlVLpaMTpfLJXI7mZXL
        JJXAcwh05E3pdFsSGIMTJAss1hfO07IKZaK1tszGe9I3pOWbWChZKPn6I2RftpUvSOfV5IeSiVsWFkhP
        ifFdeb7cS24m+YYPk/7Nh14qSZ8KiygPoUhHfIGkkiy195UMrc/J8H7HyixsLOkHwpvhn9L9hGXo8+8f
        v5cny67Q97DJ4vQ0dhOsO36Vvn53ORY7SDqa/aqj2dDCzBBHK41sltwieSK2lnfI8HzXCdVj0mmoXBd2
        kZ5z8LT2ZifpR+99AjVsJQ+XSyW9MWN+bKhj/P9AukL3yyYWSV97LYEE+HKc9iQCqWwov5XOJOWxbWId
        uVw63xtlHV6A8SWsRSCRtyTp6TyTeVm6kAw9q5qwD6lrXA+f91RH6TAkkv4PuQGBrjghXkggE+wk+z6s
        FUJ4Ur6TnGvdRKnhAOn89yDQBXpd99qvEMgI+wIu4N0EAvjGfpacW0agB3tK589Q2YlLpBP1mfOncqv0
        /TYnMANfxI+S+GkEesDcxHnvTaAN9vnc8fGyYwiYU3gYvYJAAHMG4owwfZgv3QB8biXc92M3dygeldzz
        a8lQirxxYuVI/M6ZWKrh2oXP4bno032V5OJvqqPhOE66oEMZ3dt8WnLyoepoOPjtu2B/S6bUyPCFPu7j
        aB7k73utBKsoTpxbHQ2LF1gsolhU5ZK1BPehg10JT3t55fXkgD4hveC5T+bkeFnbAJxY3TJN7gLL6lPl
        lZLNma5D9umS+0QbgAnHw6tJD3ltCyRg6uw5Qig9fRv1DRDbOBxK4YXL6IxwFN5Gu8JIvxV2bOfJJuZs
        A7xEESR7CE18LLmOF7Qsu2Eb+Zokjk2TnolugHDtcCSBADZeGOY4dyKBGia6AdhQ4RpkE2YUzxybdqwn
        ugF4v8A1yKw1xMMbNv0dZ+L7gEekK3qN5F8rTG7cEX4mm/65MvENwFshKsm1Mds2Pia+AYBGYJvMM1c2
        cJhAddn1+U80gGEvYTeZ8rptzjfA6KbIqoa3VnOyAdh/5ANb2LzmyuUDkvvw85lNrGBDKTzDG9LZxAo2
        lIJ/lfrP1kPIP14KhUKhUCgUCoX/J1NT/wI9AwYEQTqTHQAAAABJRU5ErkJggg==
</value>
  </data>
</root>